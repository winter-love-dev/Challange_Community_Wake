apply plugin: 'com.android.application'
apply plugin: 'de.undercouch.download'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "org.tensorflow.lite.examples.detection"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        ndk
        {
            moduleName "app"
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    aaptOptions {
        noCompress "tflite"
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    repositories {
        maven { url 'https://jitpack.io' }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

// import DownloadModels task
project.ext.ASSET_DIR = projectDir.toString() + '/src/main/assets'
project.ext.TMP_DIR   = project.buildDir.toString() + '/downloads'

// Download default models; if you wish to use your own models then
// place them in the "assets" directory and comment out this line.
//apply from: "download_model.gradle"

apply from:'download_model.gradle'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.0.0'

    implementation 'com.google.android.material:material:1.0.0'
    implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly'

    implementation 'org.tensorflow:tensorflow-lite:1.14.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation project(path: ':posenet_app')
//    implementation project(path: ':wake_app')

    // 볼리
    implementation 'com.android.volley:volley:1.1.0'

    // 서클뷰 이미지 라이브러리
    implementation 'de.hdodenhof:circleimageview:3.0.0'

    // 피카소 이미지 라이브러리
    implementation 'com.squareup.picasso:picasso:2.71828'

    // 로띠 애니메이션 라이브러리
    implementation 'com.airbnb.android:lottie:2.6.1'

    // 이미지 크로퍼
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.7.+'

    // 레트로핏
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.google.code.gson:gson:2.8.5'

    // 이미지 압축기
    implementation 'id.zelory:compressor:2.1.0'

    // MP AndroidChart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    // tedPermission
    implementation "gun0912.ted:tedpermission:2.1.0"

    // 구글맵
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.maps.android:android-maps-utils:0.5'

    // 텐서플로우 (사물인식)
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly'
}
